% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_simulation_meta.R
\name{run_simulation_meta}
\alias{run_simulation_meta}
\title{run_simulation_meta}
\usage{
run_simulation_meta(
  metasyst,
  parameters,
  nutrients_input = 0,
  movement = "behav",
  max_i,
  min_per_i,
  burn_in = 0,
  seagrass_each = 1,
  save_each = 1,
  return_burnin = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{metasyst}{\code{meta_syst} object created with \code{setup_meta}.}

\item{parameters}{List with all model parameters.}

\item{nutrients_input}{\code{nutr_input} object or numeric with nutrient inputs.}

\item{movement}{String specifying movement algorithm. Either 'rand', 'attr' or 'behav'.}

\item{max_i}{Integer with maximum number of simulation time steps.}

\item{min_per_i}{Integer to specify minutes per i.}

\item{burn_in}{Numeric with time steps used to burn in.}

\item{seagrass_each}{Integer how often (each i * x) seagrass dynamics will be simulated.}

\item{save_each}{Numeric how often data should be saved to return.}

\item{return_burnin}{If FALSE all time steps < burn_in are not returned.}

\item{verbose}{If TRUE, progress reports are printed.}
}
\value{
meta_rn
}
\description{
Run metaecosystems simulation.
}
\details{
This is the core function of the \pkg{meta.arrR} model that allows to easily run the
model. Besides running all sub-processes, the function also includes some basic
checks to make sure the model does not crash. However, this does not ensure that
e.g. all parameter values "make sense". The function returns a \code{meta_rn} object
which stores besides the model run results a lot of information about the model run
specification and many function that can handle the objects exist (e.g. plotting).

The functions is a 'wrapper' around the following sub-processes: i) movement across
local metaecosystems (outter loop) (ii) nutrient input, (iii) seagrass growth,
(iv) detritus mineralization, (v) movement of individuals, (vi) respiration of
individuals, (vii) growth of individuals, (viii) mortality of individuals,
(ix) diffusion of nutrients/detritus, and (x) nutrient output (all inner loop).

The \code{movement} argument allows to either specify random movement of individuals,
attracted movement towards the artificial reef of individuals or a movement behavior based
on their biosenergetics.

If \code{nutrients_input = 0.0}, no nutrient input is simulated. To also simulate no
nutrient output, set the \code{nutrients_loss} parameter to zero.

If \code{save_each > 1}, not all iterations are saved in the final \code{meta_rn} object,
but only each timestep specified by the object. However, \code{max_i} must be dividable by
\code{save_each} without rest. Similar, \code{seagrass_each} allows to simulate all
seagrass sub-processes only each specified timestep.

If \code{burn_in > 0}, all sub-processes related to fish individuals are not simulated
before this timestep is reached.
}
\examples{
\dontrun{
result_rand <- run_simulation_meta(metasyst = metasyst, nutrients_input = nutrients_input,
parameters = parameters, movement = "rand", max_i = max_i, seagrass_each = seagrass_each,
min_per_i = min_per_i, save_each = save_each, verbose = TRUE)
}

}
